import requests
from termcolor import colored

decoracion = '''
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccc;::::::::::::::::::::::::;:::::::::::;:::::::::::::;:,ccc
ccccc;ccccccccccc:ccccccccc:,:;,;:cccccccccccccccccccccccc,ccc
ccccc;ccccccc:ccccccccccc:'.      ...,:ccccccccccccccccccc,ccc
ccccc;cccccccccccccccccc'              .cccccccccccccccccc,ccc
ccccc;ccccccccccccccccc.                .:cccccccccccccccc,ccc
ccccc;cccccccccccccccc'                  .cccccccccccccccc,ccc
ccccc;cccccccc:ccccccc.                  .cccccccccccccccc,ccc
ccccc;cccccccc:ccccccc     .'.    .';.   'cccccccccccccccc,ccc
ccccc;cccccccccccccccc.   .;,'.   .';.   .cccccccccccccccc,ccc
ccccc,cccccccccccccccc'             ..   .cccccccc:ccccccc,ccc
ccccc;cccccccccccccccc.     .       .    'cccccccccccccccc,ccc
ccccc;ccccc:cccccccccc,     .           .ccccccccccccccccc,ccc
ccccc,ccccccccccccccccc:.   .       .  .cccccc:c:ccccccccc,ccc
ccccc;ccccccccccccccccccc.          . .:cccccccccccccccccc,ccc
ccccc,cc:ccccccccccccc;:.             .,,:cccccccc:;cccccc,ccc
ccccc;cccccccccccc:'.                     ..,:cccccccccccc,ccc
ccccc;cccc:cccccc,.                           .;cccccccccc,ccc
ccccc;cccc::ccc:.                              .,:cc:ccccc;ccc
ccccc;cccccccc'.                                 ':ccccccc,ccc
ccccc;ccccccc,.                                  .;ccccccc,ccc
ccccc;cccccc:                                     ,:cccccc:ccc
ccccc,cccccc.           MOHA‚àöCR ‚ÅÖB·§ª·≥±·Æ©·Æ¢·Æ£Z‚ÅÜ·Æ¢‚Öå·™º·©¨üá≤üá¶ ‚Éò‚Éï‚Äå‚É§         .;cccccc;ccc
ccccc,ccccc,                                       .:ccccc;ccc
ccccc,ccccc.              BY: @PREBOYX              .ccccc;ccc
ccccc;:::::.            TG: @BSZ_CRACKING            ;:::::ccc
cccccccccc:.                                         ,cccccccc
cccccccccc.                                          .cccccccc
cccccccccc.                                          'ccccccc
'''

print(colored(decoracion, "green"))


def obtener_informacion_ip(ip):
    url = f"https://ipapi.co/{ip}/json/"
    response = requests.get(url)
    
    if response.status_code == 200:
        data = response.json()
        return f"Informaci√≥n de la IP {ip}:\n\n" \
               f"üåç Pa√≠s: {data['country_name']}\n" \
               f"üìç Regi√≥n: {data['region']}\n" \
               f"üèôÔ∏è Ciudad: {data['city']}\n" \
               f"üìÆ C√≥digo postal: {data['postal']}\n" \
               f"üåê Latitud: {data['latitude']}\n" \
               f"üåê Longitud: {data['longitude']}\n" \
               f"‚è∞ Zona horaria: {data['timezone']}\n" \
               f"üåê Isp: {data['org']}\n" \
               f"üìû C√≥digo de llamada de pa√≠s: {data['country_calling_code']}\n" \
               f"üó£Ô∏è Lenguaje: {data['languages']}\n"\
               f"üî¢ C√≥digo ISO 3166-1 alfa-2: {data['country_code']}\n"\
               f"üî¢ C√≥digo ISO 3166-1 alfa-3: {data['country_code_iso3']}"
    else:
        print(colored("No se pudo obtener informaci√≥n de la IP. Int√©ntalo de nuevo.", "red"))
        return None

while True:
    opcion = input(colored("Elige una opci√≥n:\n1. Buscar informaci√≥n sobre una direcci√≥n IP\n2. Salir del script\n", "green", attrs=["bold"]))
    
    if opcion == "1":
        ip = input(colored("Introduce una direcci√≥n IP:", "green", attrs=["bold"]))
        informacion_ip = obtener_informacion_ip(ip)
        
        if informacion_ip:
            print(informacion_ip)
    
    elif opcion == "2":
        break
    
    else:
        print(colored("Opci√≥n inv√°lida. Por favor, elige una opci√≥n v√°lida.", "red"))